{
  "version": 3,
  "sources": ["../../@visx/event/esm/typeGuards.js", "../../@visx/event/esm/getXAndYFromEvent.js", "../../@visx/event/esm/localPointGeneric.js", "../../@visx/event/esm/localPoint.js"],
  "sourcesContent": ["export function isElement(elem) {\n  return !!elem && elem instanceof Element;\n}\n\n// functional definition of isSVGElement. Note that SVGSVGElements are HTMLElements\nexport function isSVGElement(elem) {\n  return !!elem && (elem instanceof SVGElement || 'ownerSVGElement' in elem);\n}\n\n// functional definition of SVGGElement\nexport function isSVGSVGElement(elem) {\n  return !!elem && 'createSVGPoint' in elem;\n}\nexport function isSVGGraphicsElement(elem) {\n  return !!elem && 'getScreenCTM' in elem;\n}\n\n// functional definition of TouchEvent\nexport function isTouchEvent(event) {\n  return !!event && 'changedTouches' in event;\n}\n\n// functional definition of MouseEvent\nexport function isMouseEvent(event) {\n  return !!event && 'clientX' in event;\n}\n\n// functional definition of event\nexport function isEvent(event) {\n  return !!event && (event instanceof Event || 'nativeEvent' in event && event.nativeEvent instanceof Event);\n}", "function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport { isMouseEvent, isTouchEvent } from './typeGuards';\nvar DEFAULT_POINT = {\n  x: 0,\n  y: 0\n};\nexport default function getXAndYFromEvent(event) {\n  if (!event) return _extends({}, DEFAULT_POINT);\n  if (isTouchEvent(event)) {\n    return event.changedTouches.length > 0 ? {\n      x: event.changedTouches[0].clientX,\n      y: event.changedTouches[0].clientY\n    } : _extends({}, DEFAULT_POINT);\n  }\n  if (isMouseEvent(event)) {\n    return {\n      x: event.clientX,\n      y: event.clientY\n    };\n  }\n\n  // for focus events try to extract the center position of the target element\n  var target = event == null ? void 0 : event.target;\n  var boundingClientRect = target && 'getBoundingClientRect' in target ? target.getBoundingClientRect() : null;\n  if (!boundingClientRect) return _extends({}, DEFAULT_POINT);\n  return {\n    x: boundingClientRect.x + boundingClientRect.width / 2,\n    y: boundingClientRect.y + boundingClientRect.height / 2\n  };\n}", "import { Point } from '@visx/point';\nimport { isSVGElement, isSVGGraphicsElement, isSVGSVGElement } from './typeGuards';\nimport getXAndYFromEvent from './getXAndYFromEvent';\nexport default function localPoint(node, event) {\n  if (!node || !event) return null;\n  var coords = getXAndYFromEvent(event);\n\n  // find top-most SVG\n  var svg = isSVGElement(node) ? node.ownerSVGElement : node;\n  var screenCTM = isSVGGraphicsElement(svg) ? svg.getScreenCTM() : null;\n  if (isSVGSVGElement(svg) && screenCTM) {\n    var point = svg.createSVGPoint();\n    point.x = coords.x;\n    point.y = coords.y;\n    point = point.matrixTransform(screenCTM.inverse());\n    return new Point({\n      x: point.x,\n      y: point.y\n    });\n  }\n\n  // fall back to bounding box\n  var rect = node.getBoundingClientRect();\n  return new Point({\n    x: coords.x - rect.left - node.clientLeft,\n    y: coords.y - rect.top - node.clientTop\n  });\n}", "import localPointGeneric from './localPointGeneric';\nimport { isElement, isEvent } from './typeGuards';\n\n/** Handles two signatures for backwards compatibility. */\nexport default function localPoint(nodeOrEvent, maybeEvent) {\n  // localPoint(node, event)\n  if (isElement(nodeOrEvent) && maybeEvent) {\n    return localPointGeneric(nodeOrEvent, maybeEvent);\n  }\n  // localPoint(event)\n  if (isEvent(nodeOrEvent)) {\n    var event = nodeOrEvent;\n    var node = event.target;\n    if (node) return localPointGeneric(node, event);\n  }\n  return null;\n}"],
  "mappings": "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",
  "names": ["localPoint"]
}
