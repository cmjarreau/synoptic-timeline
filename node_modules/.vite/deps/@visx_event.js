import {
  Point
} from "./chunk-BYBVD6US.js";
import "./chunk-5WRI5ZAA.js";

// node_modules/@visx/event/esm/typeGuards.js
function isElement(elem) {
  return !!elem && elem instanceof Element;
}
function isSVGElement(elem) {
  return !!elem && (elem instanceof SVGElement || "ownerSVGElement" in elem);
}
function isSVGSVGElement(elem) {
  return !!elem && "createSVGPoint" in elem;
}
function isSVGGraphicsElement(elem) {
  return !!elem && "getScreenCTM" in elem;
}
function isTouchEvent(event) {
  return !!event && "changedTouches" in event;
}
function isMouseEvent(event) {
  return !!event && "clientX" in event;
}
function isEvent(event) {
  return !!event && (event instanceof Event || "nativeEvent" in event && event.nativeEvent instanceof Event);
}

// node_modules/@visx/event/esm/getXAndYFromEvent.js
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
var DEFAULT_POINT = {
  x: 0,
  y: 0
};
function getXAndYFromEvent(event) {
  if (!event) return _extends({}, DEFAULT_POINT);
  if (isTouchEvent(event)) {
    return event.changedTouches.length > 0 ? {
      x: event.changedTouches[0].clientX,
      y: event.changedTouches[0].clientY
    } : _extends({}, DEFAULT_POINT);
  }
  if (isMouseEvent(event)) {
    return {
      x: event.clientX,
      y: event.clientY
    };
  }
  var target = event == null ? void 0 : event.target;
  var boundingClientRect = target && "getBoundingClientRect" in target ? target.getBoundingClientRect() : null;
  if (!boundingClientRect) return _extends({}, DEFAULT_POINT);
  return {
    x: boundingClientRect.x + boundingClientRect.width / 2,
    y: boundingClientRect.y + boundingClientRect.height / 2
  };
}

// node_modules/@visx/event/esm/localPointGeneric.js
function localPoint(node, event) {
  if (!node || !event) return null;
  var coords = getXAndYFromEvent(event);
  var svg = isSVGElement(node) ? node.ownerSVGElement : node;
  var screenCTM = isSVGGraphicsElement(svg) ? svg.getScreenCTM() : null;
  if (isSVGSVGElement(svg) && screenCTM) {
    var point = svg.createSVGPoint();
    point.x = coords.x;
    point.y = coords.y;
    point = point.matrixTransform(screenCTM.inverse());
    return new Point({
      x: point.x,
      y: point.y
    });
  }
  var rect = node.getBoundingClientRect();
  return new Point({
    x: coords.x - rect.left - node.clientLeft,
    y: coords.y - rect.top - node.clientTop
  });
}

// node_modules/@visx/event/esm/localPoint.js
function localPoint2(nodeOrEvent, maybeEvent) {
  if (isElement(nodeOrEvent) && maybeEvent) {
    return localPoint(nodeOrEvent, maybeEvent);
  }
  if (isEvent(nodeOrEvent)) {
    var event = nodeOrEvent;
    var node = event.target;
    if (node) return localPoint(node, event);
  }
  return null;
}
export {
  localPoint2 as localPoint,
  localPoint as touchPoint
};
//# sourceMappingURL=@visx_event.js.map
